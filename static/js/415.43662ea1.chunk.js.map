{"version":3,"file":"static/js/415.43662ea1.chunk.js","mappings":"oMAEaA,EAAa,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,yBACGF,EAAYG,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACtB,OACE,SAAC,KAAD,CAAkBC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAAtD,SACGI,GADWD,EAIjB,KAGN,C,yGCXKK,EAAgB,IAAIC,EAAAA,EA4B1B,UA1Ba,WACX,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOX,EAAP,KAAoBY,EAApB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAI,QACZ,IAAMC,EAAgB,mCAAG,+GAIXP,EAAcQ,cAJH,gBAGXC,EAHW,EAGnBC,KAAQD,QAEVN,EAAeM,GALM,gDAOrBJ,QAAQC,IAAR,MAPqB,yDAAH,qDAUtBC,GACD,GAAE,KAGD,iCACE,4CACA,SAAC,IAAD,CAAYhB,YAAaA,MAG9B,C,qFC5BYU,EAAb,kFAIE,WACE,OAAOU,EAAAA,EAAAA,IAAA,UACFV,EAAcW,IADZ,sCAC6CX,EAAcY,KAEnE,GARH,0BASE,WACE,OAAOF,EAAAA,EAAAA,IAAA,UACFV,EAAcW,IADZ,uCAC8CX,EAAcY,KAEpE,GAbH,sBAcE,WACE,OAAOF,EAAAA,EAAAA,IAAA,UACFV,EAAcW,IADZ,kCACyCX,EAAcY,IADvD,0BAGR,GAlBH,0BAmBE,SAAaC,GACX,OAAOH,EAAAA,EAAAA,IAAA,UACFV,EAAcW,IADZ,gCACuCX,EAAcY,IADrD,iCACiFC,GAEzF,GAvBH,0BAwBE,SAAaC,GACX,OAAOJ,EAAAA,EAAAA,IAAA,UACFV,EAAcW,IADZ,iBACwBG,EADxB,oBAC2Cd,EAAcY,IADzD,mBAGR,GA5BH,yBA6BE,SAAYE,GACV,OAAOJ,EAAAA,EAAAA,IAAA,UACFV,EAAcW,IADZ,iBACwBG,EADxB,2BACkDd,EAAcY,IADhE,mBAGR,GAjCH,wBAkCE,WACE,OAAOF,EAAAA,EAAAA,IAAA,UACFV,EAAcW,IADZ,oCAC2CX,EAAcY,IADzD,mBAGR,GAtCH,4BAuCE,WACE,OAAOF,EAAAA,EAAAA,IAAA,UACFV,EAAcW,IADZ,2CACkDX,EAAcY,KAExE,GA3CH,0BA4CE,SAAaE,GACX,OAAOJ,EAAAA,EAAAA,IAAA,UACFV,EAAcW,IADZ,iBACwBG,EADxB,2BACkDd,EAAcY,IADhE,mBAGR,GAhDH,wBAiDE,SAAWG,GACT,OAAOL,EAAAA,EAAAA,IAAA,8CAAiDK,GACzD,GAnDH,0BAoDE,SAAaD,GACX,OAAOJ,EAAAA,EAAAA,IAAA,UACFV,EAAcW,IADZ,iBACwBG,EADxB,4BACmDd,EAAcY,IADjE,mBAGR,GAxDH,uBAyDE,SAAUE,GACR,OAAOJ,EAAAA,EAAAA,IAAA,UACFV,EAAcW,IADZ,iBACwBG,EADxB,4BACmDd,EAAcY,IADjE,mBAGR,KA7DH,KAAaZ,EACJW,IAAM,gCADFX,EAEJY,IAAM,kC","sources":["components/ListMovies/ListMovies.jsx","pages/Home.jsx","requestServer.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\n\nexport const ListMovies = ({ arrayMovies }) => {\n  const location = useLocation();\n  return (\n    <nav>\n      {arrayMovies.map(({ id, original_title }) => {\n        return (\n          <NavLink key={id} to={`/movies/${id}`} state={{ from: location }}>\n            {original_title}\n          </NavLink>\n        );\n      })}\n    </nav>\n  );\n};\n","import { ListMovies } from 'components/ListMovies/ListMovies';\nimport { useEffect, useState } from 'react';\nimport { RequestServer } from 'requestServer';\n\nconst requestServer = new RequestServer();\n\nconst Home = () => {\n  const [arrayMovies, setArrayMovies] = useState([]);\n\n  useEffect(() => {\n    console.log('test');\n    const fetchTrendMovies = async () => {\n      try {\n        const {\n          data: { results },\n        } = await requestServer.trendingDay();\n        setArrayMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTrendMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <ListMovies arrayMovies={arrayMovies} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nexport class RequestServer {\n  static url = 'https://api.themoviedb.org/3/';\n  static key = 'ce77ddb03ebd0577ea6b19d0dd53be3c';\n\n  trendingDay() {\n    return axios.get(\n      `${RequestServer.url}trending/movie/day?api_key=${RequestServer.key}`\n    );\n  }\n  trendingWeek() {\n    return axios.get(\n      `${RequestServer.url}trending/movie/week?api_key=${RequestServer.key}`\n    );\n  }\n  newFilms() {\n    return axios.get(\n      `${RequestServer.url}movie/upcoming?api_key=${RequestServer.key}&language=en-US&page=1`\n    );\n  }\n  searchMovies(value) {\n    return axios.get(\n      `${RequestServer.url}search/movie?api_key=${RequestServer.key}&language=en-US&query=${value}`\n    );\n  }\n  movieDetails(movieId) {\n    return axios.get(\n      `${RequestServer.url}movie/${movieId}?api_key=${RequestServer.key}&language=en-US`\n    );\n  }\n  movieVideos(movieId) {\n    return axios.get(\n      `${RequestServer.url}movie/${movieId}/videos?api_key=${RequestServer.key}&language=en-US`\n    );\n  }\n  movieGenre() {\n    return axios.get(\n      `${RequestServer.url}genre/movie/list?api_key=${RequestServer.key}&language=en-US`\n    );\n  }\n  movieCountries() {\n    return axios.get(\n      `${RequestServer.url}configuration/countries?api_key=${RequestServer.key}`\n    );\n  }\n  movieTrailer(movieId) {\n    return axios.get(\n      `${RequestServer.url}movie/${movieId}/videos?api_key=${RequestServer.key}&language=en-US`\n    );\n  }\n  movieImage(backdropPath) {\n    return axios.get(`https://image.tmdb.org/t/p/original/${backdropPath}`);\n  }\n  movieReviews(movieId) {\n    return axios.get(\n      `${RequestServer.url}movie/${movieId}/reviews?api_key=${RequestServer.key}&language=en-US`\n    );\n  }\n  movieCast(movieId) {\n    return axios.get(\n      `${RequestServer.url}movie/${movieId}/credits?api_key=${RequestServer.key}&language=en-US`\n    );\n  }\n}\n"],"names":["ListMovies","arrayMovies","location","useLocation","map","id","original_title","to","state","from","requestServer","RequestServer","useState","setArrayMovies","useEffect","console","log","fetchTrendMovies","trendingDay","results","data","axios","url","key","value","movieId","backdropPath"],"sourceRoot":""}